
# Designed to 
# .  ./Day0_InitialSetup.ps1 -day1     Setup all files for the initial work
# .  ./Day0_InitialSetup.ps1 -day2 FUNCTION  Setups up day2 work in folder called FUNCTION, can run multipe times
# .  ./Day0_InitialSetup.ps1 -resetTF  Reset for a TF run (remove .terraform folder, etc)
# .  ./Day0_InitialSetup.ps1 -resetAll Reset All, reset back to factory defaults

param (
    [switch]$day1 = $false,
    [switch]$day2 = $false,
    [string]$svrFunction = "FuncType_1",
    [switch]$resetTF = $false,
    [switch]$resetAll = $false
)

# Begin Variable block - Initializing--------------
$noOutput = ""       # Used to mask output to screen for system functions
$svrFunction = $svrFunction.tolower().replace(" ","")
# End Variable block-----------------------------------

# Remove all Placeholder.txt files, .terraform folder from init and link to github repo
if (Test-Path '..\.git' ) { Remove-Item '..\.git' -Recurse -Force }
if (Test-Path '..\Day1_InitialBuilds\.terraform' ) { Remove-Item '..\Day1_InitialBuilds\.terraform' -Recurse  -Force } 
set-location "../"
Get-childItem -Recurse -Filter placeholder.txt | Remove-Item  -Force
set-location "powershell"

if ( $day1 ) { 
    # Remove folders/files regardless if existance, user  process modded them - unknown base
    if (Test-Path '..\Day1_InitialBuilds' ) { Remove-Item '..\Day1_InitialBuilds' -Recurse  -Force }
    if (Test-Path '..\Day1_inspec' ) { Remove-Item '..\Day1_inspec' -Recurse  -Force }
    Copy-Item -Path "..\ZZBaseFiles\Day1Work\Day1_InitialBuilds"  -Recurse -Destination "..\" -Container 
    if (Test-Path '..\Day1_InitialBuilds\*_0.tf' ) { Remove-Item '..\Day1_InitialBuilds\*_0.tf' -Recurse  -Force }
    Copy-Item -Path "..\ZZBaseFiles\Day1Work\Day1_inspec"  -Recurse -Destination "..\" -Container 

    echo "`r`n---------------Codebase Ready For Modification ---------------"
    echo " Day1_InitialBuilds:  Initial server builds"
    echo " Day1_inspec folder:  Inspec tests "
    echo "--------------------------------------------------------------`r`n"
}
elseif ( $day2 ) { 
    # Leaves existing folder is already created - filesystems and nas may be done separately
    # Builds out coobook folders under server function type provided by user, else uses FuncType_1

    if (-Not (Test-Path "..\Day2_Cookbooks" -PathType Container)) { $noOutput = New-Item -ItemType Directory -Force -Path "..\Day2_Cookbooks" }
    if (-Not (Test-Path "..\Day2_Cookbooks\${svrFunction}" -PathType Container)) { 
        $noOutput = New-Item -ItemType Directory -Force -Path "..\Day2_Cookbooks\${svrFunction}"
        Copy-Item -Path "..\ZZBaseFiles\Day2Work\Day2_Cookbooks\RHEL_FuncType\"  -Recurse -Destination "..\Day2_Cookbooks\${svrFunction}\RHEL" -Container  
        Copy-Item -Path "..\ZZBaseFiles\Day2Work\Day2_Cookbooks\Win_FuncType\"  -Recurse -Destination "..\Day2_Cookbooks\${svrFunction}\Windows" -Container
    }
    
    if (-Not (Test-Path '..\Day2_Inspec' )) { Copy-Item -Path "..\ZZBaseFiles\Day2Work\Day2_Inspec"  -Recurse -Destination "..\" -Container }
    
    echo "`r`n-------------------------Codebase Ready For Modification ----------------"
    echo " Day1_InitialBuilds: CPU/RAM/DISK/Owner/SetSharedAccess mods in TF files"
    echo " Day1_inspec:        Autogenerated Inspec tests for TF mods"
    echo " Day2_Cookbooks:     Adhoc cookbook work for RHEL and Windows"
    echo " Day2_Filesystems:   File Systems work on RHEL and Windows"
    echo " Day2_inspec:        Adhoc Inspec tests"
    echo "-------------------------------------------------------------------------`r`n"
}
elseif ( $resetTF ) { 
    if (Test-Path '..\Day1_InitialBuilds\.terraform' ) { Remove-Item '..\Day1_InitialBuilds\.terraform' -Recurse  -Force } 
}
elseif ( $resetAll ) { 
    if (Test-Path '..\Day1_InitialBuilds' ) { Remove-Item '..\Day1_InitialBuilds' -Recurse  -Force } 
    if (Test-Path '..\Day1_Inspec' ) { Remove-Item '..\Day1_Inspec' -Recurse  -Force } 
    if (Test-Path '..\Day2_Cookbooks' ) { Remove-Item '..\Day2_Cookbooks' -Recurse  -Force } 
    if (Test-Path '..\Day2_Filesystems' ) { Remove-Item '..\Day2_Filesystems' -Recurse  -Force } 
    if (Test-Path '..\Day2_Inspec' ) { Remove-Item '..\Day2_Inspec' -Recurse  -Force } 
}
else {
    echo "`r`n-------------------------------------------------------------------------------------------------------------------------" 
    echo "                                                   NO PARAMETER SPECIFIED" 
    echo "./Day0_InitialSetup.ps1 -day1                        Setup all folder/files for the initial work"
    echo "./Day0_InitialSetup.ps1 -day2 FUNCTION  Setups up day2 work in folder called FUNCTION, can run multipe times"
    echo "./Day0_InitialSetup.ps1 -resetTF                     Reset for a TF run (remove .terraform folder, etc)"
    echo "./Day0_InitialSetup.ps1 -resetAll                    Reset All, reset back to factory defaults"
    echo "----------------------------------------------------------------------------------------------------------------------------`r`n" 
}